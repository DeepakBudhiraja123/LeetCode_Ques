class Solution {
    void solve(vector<int>& candidates, int target, vector<vector<int>> &ans, vector<int> &temp, int sum){
        if(sum > target){
            return;
        }
        if(sum == target){
            ans.push_back(temp);
            return;
        }
        for(int i = 0; i<candidates.size(); i++){
            temp.push_back(candidates[i]);
            sum += candidates[i];
            solve(candidates, target, ans, temp, sum);
            sum -= candidates[i];
            temp.pop_back();
        }
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<vector<int>> res;
        vector<int> temp;
        int s = 0;
        solve(candidates, target, ans, temp, 0);
        for(int i = 0; i<ans.size(); i++){
            sort(ans[i].begin(), ans[i].end());
        }
        for(int i = 0; i<ans.size(); i++){
            if(find(res.begin(), res.end(), ans[i]) == res.end()){
                res.push_back(ans[i]);
            }
        }
        return res;
    }
};
