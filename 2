/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL){
            return l2;
        }
        if(l2==NULL){
            return l1;
        }
        int sum = l1->val + l2->val;
        int temp = 0;
        if(sum>=10){
            sum = sum -10;
            temp = 1;
        }
        ListNode* l3 = new ListNode(sum);
        ListNode* tem = l3;
        l1 = l1->next;
        l2 = l2->next;
        while(l1!=NULL && l2!=NULL){
            int value = l1->val + l2->val;
            if(temp == 1){
                value++;
                temp = 0;
            }
            if(value>=10){
                value = value -10;
                temp = 1;
            }
            tem->next = new ListNode(value);
            l1 = l1->next;
            l2=l2->next;
            tem = tem->next; 
        }
        while(l1!=NULL){
            int value = l1->val;
            if(temp == 1){
                value = value+1;
                temp = 0;
            }
            if(value>=10){
                value = value -10;
                temp = 1;
            }
            tem->next = new ListNode(value);
            l1 = l1->next;
            tem = tem->next;
        }
        while(l2!=NULL){
            int value = l2->val;
            if(temp == 1){
                value = value+1;
                temp = 0;
            }
            if(value>=10){
                value = value -10;
                temp = 1;
            }
            tem->next = new ListNode(value);
            l2 = l2->next;
            tem = tem->next;
        }
        if(temp == 1){
            tem->next = new ListNode(1);
        }
        return l3;

    }
};
