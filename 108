/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* solve(TreeNode* root, int start, int end, vector<int> nums){
        if(start>end){
            return root;
        }
        int mid = (start+end)/2;
        root = new TreeNode(nums[mid]);
        root->left = solve(root->left, start, mid-1, nums);
        root->right = solve(root->right, mid+1, end, nums);
        return root;
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int start = 0;
        int end = nums.size()-1;
        TreeNode* root = NULL;
        root = solve(root,start, end, nums);
        return root;
    }
};
