class Solution {
    void solve(vector<int> &nums, int index, vector<vector<int>> &temp){
        if(index >= nums.size()){
            temp.push_back(nums);
            return;
        }
        for(int i = index; i<nums.size(); i++){
            swap(nums[index], nums[i]);
            solve(nums, index+1, temp);
            swap(nums[index], nums[i]);
        }
    }
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> temp;
        vector<vector<int>> result;
        int index = 0;
        solve(nums, index, temp);
        for(int i = 0; i<temp.size(); i++){
            if(find(result.begin(), result.end(), temp[i]) == result.end()){
                result.push_back(temp[i]);
            }
        }
        return result;
    }
};
