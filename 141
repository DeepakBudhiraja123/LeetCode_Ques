/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* slow = head;
        ListNode* fast = head;
        if(slow==NULL){
            return false;
        }
        slow = slow->next;
        if(fast->next == NULL){
            return false;
        }
        fast = fast->next->next;
        while(true){
            if(fast == NULL){
                return false;
            }
            if(fast==slow){
                return true;
            }
            slow = slow->next;
            if(fast->next == NULL){
            return false;
        }
            fast = fast->next->next;
        }
    }
};
