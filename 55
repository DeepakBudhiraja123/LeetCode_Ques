class Solution {
    bool solve(vector<int> &nums){
        vector<bool> dp(nums.size()+1, false);
        dp[nums.size()] = dp[nums.size()-1] = true;
        for(int i = nums.size()-2; i>=0; i--){
            int number = nums[i];
            bool found = false;
            if(number == 0){
                dp[i] = false;
            }
            else{
                for(int j = 1; j<=number; j++){
                    if(j+i < dp.size() && dp[j+i] == true){
                        dp[i] = true;
                        found = true;
                        break;
                    }
                }
            }
            if(!found){
                dp[i] = false;
            }
        }
        return dp[0];
    }
public:
    bool canJump(vector<int>& nums) {
        bool ans = solve(nums);
        return ans;
    }
};
