class Solution {
    bool isPresent(string s, char a){
        for(int i=0;i<s.length();i++){
            if(s[i]==a){
                return true;
            }
        }
        return false;
    }
public:
    int lengthOfLongestSubstring(string s) {
        if(s.length()==0){
            return 0;
        }
        else if(s.length()==1){
            return 1;
        }
        else if(s.length()==2 && (s[0]!=s[1])){
            return 2;
        }
        else if(s.length()==2 && (s[0]==s[1])){
            return 1;
        }
        int temp = 0;
        int max = 0;
        for(int i = 0; i<s.length(); i++){
            temp = 1;
            for(int j = i; j<s.length(); j++){
                 if(isPresent(s.substr(i,j-i+1),s[j+1])){
                     if(max<temp){
                         max = temp;
                    }
                         break;
                 }
                 if(j == s.length()-1){
                     if(max<temp){
                         max = temp;
                     }
                 }
                 temp++;
            }
        }
        return max;
    }
};
