/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector <int> vec;
    vector<int> rightSideView(TreeNode* root) {
        queue <TreeNode*> q;
        if(root==NULL){
            return vec;
        }

        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* a = q.front();
            q.pop();
            if(a==NULL){
                if(q.empty()){
                    break;
                }
                else{
                    q.push(NULL);
                }
            }
            else{
                if(a->left){
                    q.push(a->left);
                }
                if(a->right){
                    q.push(a->right);
                }
                if(q.front() == NULL){
                vec.push_back(a->val);
                }
            }
        }
        return vec;
    }
};
